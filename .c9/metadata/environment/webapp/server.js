{"filter":false,"title":"server.js","tooltip":"/webapp/server.js","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":50,"column":0},"action":"insert","lines":["// simple employee app (Node.js + express + mysql)","const express = require('express');","const mysql = require('mysql2/promise');","","const app = express();","app.use(express.json());","","const DB_HOST = process.env.DB_HOST || 'mysql-svc.mysql-ns.svc.cluster.local';","const DB_USER = process.env.DB_USER || 'root';","const DB_PASSWORD = process.env.DB_PASSWORD || 'rootpassword';","const DB_NAME = process.env.DB_NAME || 'employeesdb';","","let pool;","","async function initDb() {","  pool = mysql.createPool({","    host: DB_HOST,","    user: DB_USER,","    password: DB_PASSWORD,","    database: DB_NAME,","    waitForConnections: true,","    connectionLimit: 10,","    queueLimit: 0","  });","","  // create table if not exists","  await pool.query(`CREATE TABLE IF NOT EXISTS employees (","    id INT AUTO_INCREMENT PRIMARY KEY,","    name VARCHAR(100),","    role VARCHAR(100)","  )`);","}","initDb().catch(err => { console.error('DB init failed', err); process.exit(1); });","","app.get('/', async (req, res) => {","  const [rows] = await pool.query('SELECT * FROM employees');","  res.json({ employees: rows });","});","","app.post('/employee', async (req, res) => {","  const { name, role } = req.body;","  if(!name || !role) return res.status(400).json({ error: 'name & role required' });","  const [result] = await pool.query('INSERT INTO employees (name, role) VALUES (?, ?)', [name, role]);","  res.json({ id: result.insertId, name, role });","});","","const PORT = process.env.PORT || 8080;","app.listen(PORT, () => {","  console.log(`Employees app listening on port ${PORT}`);","});",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["// simple employee app (Node.js + express + mysql)","const express = require('express');","const mysql = require('mysql2/promise');","","const app = express();","app.use(express.json());","","const DB_HOST = process.env.DB_HOST || 'mysql-svc.mysql-ns.svc.cluster.local';","const DB_USER = process.env.DB_USER || 'root';","const DB_PASSWORD = process.env.DB_PASSWORD || 'rootpassword';","const DB_NAME = process.env.DB_NAME || 'employeesdb';","","let pool;","","async function initDb() {","  pool = mysql.createPool({","    host: DB_HOST,","    user: DB_USER,","    password: DB_PASSWORD,","    database: DB_NAME,","    waitForConnections: true,","    connectionLimit: 10,","    queueLimit: 0","  });","","  // create table if not exists","  await pool.query(`CREATE TABLE IF NOT EXISTS employees (","    id INT AUTO_INCREMENT PRIMARY KEY,","    name VARCHAR(100),","    role VARCHAR(100)","  )`);","}","initDb().catch(err => { console.error('DB init failed', err); process.exit(1); });","","app.get('/', async (req, res) => {","  const [rows] = await pool.query('SELECT * FROM employees');","  res.json({ employees: rows });","});","","app.post('/employee', async (req, res) => {","  const { name, role } = req.body;","  if(!name || !role) return res.status(400).json({ error: 'name & role required' });","  const [result] = await pool.query('INSERT INTO employees (name, role) VALUES (?, ?)', [name, role]);","  res.json({ id: result.insertId, name, role });","});","","const PORT = process.env.PORT || 8080;","app.listen(PORT, () => {","  console.log(`Employees app listening on port ${PORT}`);","});",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["const express = require('express');","const mysql = require('mysql2/promise');","const bodyParser = require('body-parser');","","const app = express();","app.use(bodyParser.json());","","const DB_HOST = process.env.DB_HOST || 'mysql-svc.mysql.svc.cluster.local';","const DB_USER = process.env.DB_USER || 'root';","const DB_PASSWORD = process.env.DB_PASSWORD || 'rootpassword';","const DB_NAME = process.env.DB_NAME || 'employeesdb';","const PORT = process.env.PORT || 8080;","","let pool;","","async function initDb() {","  pool = mysql.createPool({","    host: DB_HOST,","    user: DB_USER,","    password: DB_PASSWORD,","    waitForConnections: true,","    connectionLimit: 10","  });","","  // Create DB and table if not exists","  await pool.query(`CREATE DATABASE IF NOT EXISTS \\`${DB_NAME}\\``);","  await pool.query(`USE \\`${DB_NAME}\\``);","  await pool.query(`CREATE TABLE IF NOT EXISTS employees (","    id INT AUTO_INCREMENT PRIMARY KEY,","    name VARCHAR(255) NOT NULL,","    role VARCHAR(255) NOT NULL","  )`);","  console.log('DB initialized');","}","","app.get('/', (req, res) => {","  res.send('Employees app running. Use GET /employees and POST /employees');","});","","app.get('/employees', async (req, res) => {","  try {","    const [rows] = await pool.query(`SELECT * FROM \\`${DB_NAME}\\`.employees`);","    res.json(rows);","  } catch (err) {","    console.error(err);","    res.status(500).json({ error: err.message });","  }","});","","app.post('/employees', async (req, res) => {","  try {","    const { name, role } = req.body;","    if (!name || !role) return res.status(400).json({ error: 'name and role required' });","    const [result] = await pool.query(`INSERT INTO \\`${DB_NAME}\\`.employees (name, role) VALUES (?, ?)`, [name, role]);","    res.json({ id: result.insertId, name, role });","  } catch (err) {","    console.error(err);","    res.status(500).json({ error: err.message });","  }","});","","app.listen(PORT, async () => {","  try {","    await initDb();","    console.log(`Server listening on port ${PORT}`);","  } catch (err) {","    console.error('Failed to initialize DB:', err);","    process.exit(1);","  }","});",""],"id":3}],[{"start":{"row":7,"column":72},"end":{"row":7,"column":73},"action":"remove","lines":["l"],"id":4},{"start":{"row":7,"column":71},"end":{"row":7,"column":72},"action":"remove","lines":["a"]},{"start":{"row":7,"column":70},"end":{"row":7,"column":71},"action":"remove","lines":["c"]},{"start":{"row":7,"column":69},"end":{"row":7,"column":70},"action":"remove","lines":["o"]},{"start":{"row":7,"column":68},"end":{"row":7,"column":69},"action":"remove","lines":["l"]},{"start":{"row":7,"column":67},"end":{"row":7,"column":68},"action":"remove","lines":["."]},{"start":{"row":7,"column":66},"end":{"row":7,"column":67},"action":"remove","lines":["r"]},{"start":{"row":7,"column":65},"end":{"row":7,"column":66},"action":"remove","lines":["e"]},{"start":{"row":7,"column":64},"end":{"row":7,"column":65},"action":"remove","lines":["t"]},{"start":{"row":7,"column":63},"end":{"row":7,"column":64},"action":"remove","lines":["s"]},{"start":{"row":7,"column":62},"end":{"row":7,"column":63},"action":"remove","lines":["u"]},{"start":{"row":7,"column":61},"end":{"row":7,"column":62},"action":"remove","lines":["l"]},{"start":{"row":7,"column":60},"end":{"row":7,"column":61},"action":"remove","lines":["c"]},{"start":{"row":7,"column":59},"end":{"row":7,"column":60},"action":"remove","lines":["."]},{"start":{"row":7,"column":58},"end":{"row":7,"column":59},"action":"remove","lines":["c"]},{"start":{"row":7,"column":57},"end":{"row":7,"column":58},"action":"remove","lines":["v"]},{"start":{"row":7,"column":56},"end":{"row":7,"column":57},"action":"remove","lines":["s"]},{"start":{"row":7,"column":55},"end":{"row":7,"column":56},"action":"remove","lines":["."]},{"start":{"row":7,"column":54},"end":{"row":7,"column":55},"action":"remove","lines":["l"]},{"start":{"row":7,"column":53},"end":{"row":7,"column":54},"action":"remove","lines":["q"]},{"start":{"row":7,"column":52},"end":{"row":7,"column":53},"action":"remove","lines":["s"]},{"start":{"row":7,"column":51},"end":{"row":7,"column":52},"action":"remove","lines":["y"]},{"start":{"row":7,"column":50},"end":{"row":7,"column":51},"action":"remove","lines":["m"]},{"start":{"row":7,"column":49},"end":{"row":7,"column":50},"action":"remove","lines":["."]},{"start":{"row":7,"column":48},"end":{"row":7,"column":49},"action":"remove","lines":["c"]},{"start":{"row":7,"column":47},"end":{"row":7,"column":48},"action":"remove","lines":["v"]},{"start":{"row":7,"column":46},"end":{"row":7,"column":47},"action":"remove","lines":["s"]},{"start":{"row":7,"column":45},"end":{"row":7,"column":46},"action":"remove","lines":["-"]}]]},"ace":{"folds":[],"scrolltop":288,"scrollleft":0,"selection":{"start":{"row":38,"column":0},"end":{"row":38,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":19,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1761496961103,"hash":"36a96cafe86a1ee458e39bf46537af35b8a9473c"}
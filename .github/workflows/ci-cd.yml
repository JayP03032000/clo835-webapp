{"filter":false,"title":"ci-cd.yml","tooltip":"/.github/workflows/ci-cd.yml","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["name: Build and Push to ECR","","on:","  push:","    branches:","      - main","","jobs:","  build-and-push:","    runs-on: ubuntu-latest","    steps:","    - name: Checkout","      uses: actions/checkout@v4","","    - name: Configure AWS credentials","      uses: aws-actions/configure-aws-credentials@v2","      with:","        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}","        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}","        aws-region: us-east-1","","    - name: Login to Amazon ECR","      id: login-ecr","      uses: aws-actions/amazon-ecr-login@v1","","    - name: Build, tag, and push Docker image","      env:","        ECR_REGISTRY: 905418424422.dkr.ecr.us-east-1.amazonaws.com","        IMAGE_NAME: clo835-webapp","      run: |","        docker build -t $IMAGE_NAME:latest ./webapp","        docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest","        docker push $ECR_REGISTRY/$IMAGE_NAME:latest",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["name: Build and Push to ECR","","on:","  push:","    branches:","      - main","","jobs:","  build-and-push:","    runs-on: ubuntu-latest","    steps:","    - name: Checkout","      uses: actions/checkout@v4","","    - name: Configure AWS credentials","      uses: aws-actions/configure-aws-credentials@v2","      with:","        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}","        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}","        aws-region: us-east-1","","    - name: Login to Amazon ECR","      id: login-ecr","      uses: aws-actions/amazon-ecr-login@v1","","    - name: Build, tag, and push Docker image","      env:","        ECR_REGISTRY: 905418424422.dkr.ecr.us-east-1.amazonaws.com","        IMAGE_NAME: clo835-webapp","      run: |","        docker build -t $IMAGE_NAME:latest ./webapp","        docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest","        docker push $ECR_REGISTRY/$IMAGE_NAME:latest",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["name: Build and Push to ECR","","on:","  push:","    branches:","      - main","","jobs:","  build-and-push:","    runs-on: ubuntu-latest","","    steps:","    - name: Checkout repository","      uses: actions/checkout@v4","","    - name: Configure AWS credentials","      uses: aws-actions/configure-aws-credentials@v2","      with:","        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}","        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}","        aws-region: ${{ secrets.AWS_REGION }}","","    - name: Login to Amazon ECR","      id: login-ecr","      uses: aws-actions/amazon-ecr-login@v1","","    - name: Build, tag, and push Docker image","      env:","        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com","        IMAGE_NAME: ${{ secrets.ECR_REPO }}","      run: |","        echo \"Building Docker image...\"","        docker build -t $IMAGE_NAME:latest ./webapp","        echo \"Tagging Docker image...\"","        docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest","        echo \"Pushing Docker image to ECR...\"","        docker push $ECR_REGISTRY/$IMAGE_NAME:latest",""]}],[{"start":{"row":32,"column":8},"end":{"row":32,"column":51},"action":"remove","lines":["docker build -t $IMAGE_NAME:latest ./webapp"],"id":3},{"start":{"row":32,"column":8},"end":{"row":32,"column":44},"action":"insert","lines":["docker build -t $IMAGE_NAME:latest ."]}],[{"start":{"row":0,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["<<<<<<< HEAD","git add .github/workflows/ci-cd.yml","git commit -m \"Add CI/CD workflow for ECR\"","git push origin main","","=======",""],"id":4,"ignore":true},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":[">>>>>>> 36840c2 (Initial commit / Fix Docker build path)",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":7},"action":"remove","lines":["<<<<<<<"],"id":5,"ignore":true},{"start":{"row":5,"column":0},"end":{"row":5,"column":7},"action":"remove","lines":["======="]},{"start":{"row":43,"column":0},"end":{"row":43,"column":7},"action":"remove","lines":[">>>>>>>"]}],[{"start":{"row":0,"column":0},"end":{"row":44,"column":0},"action":"remove","lines":[" HEAD","git add .github/workflows/ci-cd.yml","git commit -m \"Add CI/CD workflow for ECR\"","git push origin main","","","name: Build and Push to ECR","","on:","  push:","    branches:","      - main","","jobs:","  build-and-push:","    runs-on: ubuntu-latest","","    steps:","    - name: Checkout repository","      uses: actions/checkout@v4","","    - name: Configure AWS credentials","      uses: aws-actions/configure-aws-credentials@v2","      with:","        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}","        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}","        aws-region: ${{ secrets.AWS_REGION }}","","    - name: Login to Amazon ECR","      id: login-ecr","      uses: aws-actions/amazon-ecr-login@v1","","    - name: Build, tag, and push Docker image","      env:","        ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com","        IMAGE_NAME: ${{ secrets.ECR_REPO }}","      run: |","        echo \"Building Docker image...\"","        docker build -t $IMAGE_NAME:latest .","        echo \"Tagging Docker image...\"","        docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest","        echo \"Pushing Docker image to ECR...\"","        docker push $ECR_REGISTRY/$IMAGE_NAME:latest"," 36840c2 (Initial commit / Fix Docker build path)",""],"id":6},{"start":{"row":0,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["name: Build and Push to ECR","","on:","  push:","    branches:","      - main","","jobs:","  build-and-push:","    runs-on: ubuntu-latest","","    steps:","      - name: Checkout repository","        uses: actions/checkout@v4","","      - name: Configure AWS credentials","        uses: aws-actions/configure-aws-credentials@v2","        with:","          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}","          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}","          aws-region: ${{ secrets.AWS_REGION }}","","      - name: Login to Amazon ECR","        id: login-ecr","        uses: aws-actions/amazon-ecr-login@v1","","      - name: Build, tag, and push Docker image","        env:","          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com","          IMAGE_NAME: ${{ secrets.ECR_REPO }}","        run: |","          docker build -t $IMAGE_NAME:latest ./webapp","          docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest","          docker push $ECR_REGISTRY/$IMAGE_NAME:latest",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":17,"column":13},"end":{"row":17,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1761502440065,"hash":"cb286301d44bd93b0f4af19f11dffb80fd185569"}